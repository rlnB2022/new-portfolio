export const projects = [
	{
		id: "millionaire",
		tech: "React • Redux • Firebase",
		name: "Javascript Millionaire App",
		imgSrc: "javascript-millionaire",
		projectLink: "https://rlnb2022.github.io/Javascript-Millionaire/",
		githubLink: "https://github.com/rlnB2022/Javascript-Millionaire",
		description: [
			"<p>I developed this app to enhance my knowledge of React and learn how to implement a Firestore database. The app has been enhanced to utilize Redux for state management.</p>",
			"<ul><li>React</li><li>useState / useEffect Hooks</li><li>Firebase</li><li>HTML</li><li>CSS</li><li>Javascript</li></ul>",
			"<p>I welcomed the opportunity to explore and experiment with Firebase/Firestore since the challenge of learning new things is fun me. Reading through the Firestore docs and reviewing the setup procedure, on their website, proved to be fairly straightforward.</p><p>Encountering excessive renderings became an issue when implementing the Timer component from App.js.  Rather than initiating a countdown from 30 when the game starts and the question is revealed, it began immediately. Shifting the logic to the Timer component made a significant improvement.</p><p> I used SVG images for each question/answer, but encountered a problem when the SVGs wouldn't resize to align with the grid.</p><p>To implement something like this in the future, I will need to delve deeper into using SVG’s and broaden my understanding.</p>",
			"<p>React is the library for me as I really enjoy using it! Firestone databases are amazing.  Coming from a SQL background, a noSQL database with documents wasn’t as difficult as I initially anticipated. Implementing React Redux to manage the state of the app turned out to be less difficult than originally expected. Given my experience with Flux, adapting and learning was a relatively smooth transition.</p>",
		],
	},
	{
		id: "digidugout",
		tech: "PHP • Javascript • jQuery • AJAX",
		name: "DigiDugout Website",
		imgSrc: "digidugout",
		projectLink: "https://www.digidugout.com",
		githubLink: "https://github.com/rlnB2022/digi-new-scoresheets",
		description: [
			"<p>I established this website to cater to a particular gaming niche involving baseball player cards and dice, aiming to enhance the user experience by reducing the setup time for these games. Games like Strat O-Matic, APBA and Payoff Pitch all fit into this gaming category which share a common issue— the considerable amount of time required for setup. This dilemma inspired me to create DigiDugOut.com which reduces the game set up time by 75%.</p><br /><h2>Features:</h2><ul><li>mySQL database containing tables for every player who has participated in the game, along with the lineups for each game ever played.</li><li>Customized date selector with month and year options</li><li>Team names displayed with color representation</li><li>Features daily games with actual outcomes</li><li>View the lineups for each team</li><li>The Print Scoresheet button will popup a PDF file for printing</li><li>Lineups and starting pitchers are pre-filled</li></ul>",
			"<ul><li>PHP</li><li>Javascript</li><li>jQuery</li><li>HTML</li><li>CSS</li><li>AJAX</li></ul>",
			"<p>My goal was simple. Create a website where users don't have to do any online research; they don't have to write the lineups and starting pitchers on a blank score sheet by hand; they can just find the game and click print score sheet.</p><p>I knew what I wanted to build. I knew who my audience was and why they would want to use this resource. I just didn't know what Tech to use to accomplish my goals.</p><p>So, I did some research. Mainly into how to access a database from a website that I would create. I stumbled across some YouTube videos on PHP that showed how to connect, read, update, and delete data. It seemed fairly simple so I moved forward.</p><p>Next, I looked into web-hosting and found that there were cheap hosting services that used phpMyAdmin, so I went with it. From that point forward, I was learning PHP 'on-the-job'. I used php.net docs often, as well as StackOverflow and standard Google searches to find what I was looking for.</p><p>I went through a number of iterations on the design for the website before settling on the current version. I really just wanted the website to be simple to use and straight to the point. I used lined-notebooks and blank sheets of copy paper to draw out ideas. It wasn't until many months later that I discovered Figma, but never used it with this project.</p>",
			"<p>This project became a rewarding learning journey, introducing me to new technologies and data-fetching methods. In the beginning I struggled with PHP, AJAX, and jQuery since I was new to these technologies. Despite the learning curve, I pushed to understand them during development.</p><p>While I acknowledge there's room for code improvement, I take pride in the work accomplished. The development process not only honed my PHP skills but also shed light on the seamless integration of jQuery and AJAX, enabling data fetching without page reloads—a feature I found particularly cool, coming from a React background! I even discovered the flexibility of creating my own Date Objects if the built-in ones didn't suit my preferences.</p>",
		],
	},
	{
		id: "twobarrels",
		tech: "React • React Router • FontAwesome",
		name: "React Two Barrels Website",
		imgSrc: "twobarrels",
		projectLink: "https://rlnb2022.github.io/twobarrels/",
		githubLink: "https://github.com/rlnB2022/twobarrels",
		description: [
			"<p>I am highly impressed with Two Barrels for their core values, the freedom given to developers to try new things out even if they fail miserably and overall - the way their website speaks to me. I wanted to show my enthusiasm for Two Barrels and use the knowledge that I have to reproduce their website and show that I can do what is required for the job, even when using a library like React. Using the skills that I have, I created this website using React and React Router.</p><p>This project uses 40 components, each with their own integrated stylesheet.</p>",
			"<ul><li>React</li><li>React Router</li><li>useState and useEffect Hooks</li><li>HTML</li><li>CSS</li><li>Javascript</li></ul>",
			"<p>Knowing that this website should be created using regular HTML, CSS, and Javascript - or Wordpress, I wanted to use the skills I have in React to create this website, as ridiculous as that may seem (using the wrong tech for the job).</p><p>I went through every single page and read every single word of this website to get an understanding of what components would be needed.</p><p>I used a mobile-first design, then added styles to accomodate tablet and desktop</p><p>The end result turned out great!</p>",
			"<p>I learned that using React Router published to Github pages doesn't work well when typing into the address bar to get to a specific page.</p><p>This was a really fun project to build and has accelerated my confidence working with React.</p><p><strong>Two Barrels:</strong> What a great website! Whoever wrote the content for your website deserves a raise, I'm very impressed.</p>",
		],
	},
	{
		id: "amazon",
		tech: "React • Redux • Firebase • React Router",
		name: "Amazon Clone",
		imgSrc: "amazon-clone",
		projectLink: "https://clone-332d9.web.app/",
		githubLink: "https://github.com/rlnB2022/amazon-clone",
		description: [
			"<p>This project gave me an opportunity to enhance my comprehension of React and React Router. It involved the implementation of the Firebase User Authentication system, shopping carts, and payment systems (maybe, one day). Within this project, new users can register for an account, create a User ID and password, as well as sign in and sign out. Clicking the cart icon will re-direct you to your shopping cart which displays all of the products that you’ve selected for purchase.</p>",
			"<ul><li>React</li><li>React Redux</li><li>React Router</li><li>Firebase (user authentication)</li><li>useState / UseEffect Hooks</li><li>HTML</li><li>CSS</li><li>Javascript</li></ul>",
			"<p>Taking inspiration from the actual amazon.com website, I mocked up a one-page paper wireframe (perhaps Figma would have been a better choice). While certain elements such as the search bar, cart quantity selector and other links are non-functional, my primary focus was on developing the login system and refining the shopping cart.</p>",
			"<p>Exploring Firebase Auth and implementing shopping carts with React Redux made this project enjoyable.</p><p>Overall, I am happy with how the website turned out and I look forward to revisiting this project to address the issues mentioned above while also making sure to add mobile functioanlity.</p>",
		],
	},
	{
		id: "visualizer",
		tech: "Javascript • Canvas • Audio",
		name: "Audio Visualizer",
		imgSrc: "audio-visualizer",
		projectLink: "https://rlnb2022.github.io/audio-visualizer/index.html",
		githubLink: "https://github.com/rlnB2022/audio-visualizer",
		description: [
			"<h3 style='margin-top: .5rem'><strong>NOT OPTIMIZED FOR MOBILE (yet)</strong></h3><p>I created this fun project to learn about the canvas and the HTML audio element. I've seen visualizers before and wanted to challenge myself to make one myself. To depict audio playing, I chose a spinning record. To show the audio visualizations, I wanted them to go completely around the record showing different colors as the frequencies changed. Adding a nice background color effect completed the challenge for me. Click the Choose a Song button to find a mp3 to load. Once loaded, click anywhere on the canvas to spin the record and listen to the song.</p>",
			"<ul><li>Javascript</li><li>Canvas</li><li>HTML Audio Element</li><li>HTML</li><li>CSS</li><li>jsMediaTags Library</li></ul>",
			"<p>I had to figure out how to draw each item I wanted on the screen, this included arcs, lines and text.</p><p>Some of the lines were not as 'strong' as others and would not display from behind the record. So, I had to create a minimum/maximum line length so that they would display properly.</p><p>I was getting errors when trying to play the song selected before it loaded, until I understood that I needed to resume the context, then toggle the Audio to play.</p>",
			"<p>I think I'd like to learn more about canvas and what else I can do with it. I'd love to create options for other audio visualizations, like graphics and effects that remain on screen then within a few seconds - fade away.</p><p>I learned about saving and restoring the canvas so that I can make rotational changes, then put the canvas back to its original orientation so that other drawing methods will render correctly.</p><p>This project brought out my creative side. Adding the BG effect was something I thought would be interesting to see. I had to figure out how to change the background color dynamically, so I chose to add RGB based on the audio frequency.</p>",
		],
	},
];
