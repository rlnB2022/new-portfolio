export const projects = [
	{
		id: "millionaire",
		tech: "React • Redux • Firebase",
		name: "Javascript Millionaire App",
		imgSrc: "javascript-millionaire",
		projectLink: "https://rlnb2022.github.io/Javascript-Millionaire/",
		githubLink: "https://github.com/rlnB2022/Javascript-Millionaire",
		description: [
			"<p>I developed this app to enhance my knowledge of React and learn how to implement a Firestore database. The app was updated to utilize Redux for state management.</p>",
			"<ul><li>React</li><li>Redux</li><li>useState / useEffect Hooks</li><li>Firebase</li><li>HTML</li><li>CSS</li><li>Javascript</li></ul>",
			"<p>I love a good challenge. So, when I needed a way to store the questions and answers in a database, I welcomed the opportunity to explore and experiment with Firebase/Firestore.</p><p>Reading through the Firestore docs and reviewing the setup procedure on their website proved to be fairly straightforward.</p><p>Encountering excessive renderings became an issue when implementing the Timer component from App.js.  Rather than initiating a countdown from 30 when the game starts and the question is revealed, it began immediately. Shifting the logic to the Timer component made a significant improvement in performance.</p>",
			"<p>Firestore databases are amazing. Coming from a SQL background, a noSQL database with documents wasn’t as difficult as I initially anticipated. This was the first project where I learned how to implement React Redux to manage the state of the app. Given my work-experience with Flux, adapting and learning was a relatively smooth transition.</p>",
		],
	},
	{
		id: "digidugout",
		tech: "PHP • Javascript • jQuery • AJAX",
		name: "DigiDugout Website",
		imgSrc: "digidugout",
		projectLink: "https://www.digidugout.com",
		githubLink: "https://github.com/rlnB2022/digi-new-scoresheets",
		description: [
			"<p>I designed and developed this website to cater to a cards and dice baseball gaming niche. My goal was to enhance the user experience by reducing the setup time for these games. Games like Strat O-Matic, APBA and Payoff Pitch all fit into this gaming category which share a common issue— the considerable amount of time required for game setup. This dilemma inspired me to create DigiDugout.com which reduces the game set up time by 75%.</p><br /><p>Features:</p><ul><li>mySQL database containing tables for every game, player and lineup in baseball history</li><li>Customized date selector with month and year options</li><li>Team names displayed with color representation</li><li>Features daily games with actual outcomes</li><li>View the lineups for each team</li><li>Optional scoresheet printing</li><li>Pre-filled lineups and starting pitchers</li></ul>",
			"<ul><li>PHP</li><li>Javascript</li><li>jQuery</li><li>HTML</li><li>CSS</li><li>AJAX</li></ul>",
			"<p>My goal was simple. Create a website where users don't have to do any online research; they don't have to write the lineups and starting pitchers on a blank score sheet by hand, they can simply find the game they want to play and print the score sheet.</p><p>I knew what I wanted to build. I knew who my audience was and why they would want to use this resource. I just didn't know what Tech to use to accomplish my goals.</p><p>So, I did some research. I knew I needed to store a lot of data (players and games), so I looked into how to access a database from my website. I stumbled across some YouTube videos on PHP that showed how to connect, read, update, and delete data. It seemed fairly simple so I moved forward.</p><p>Next, I looked into web-hosting and found that there were cheap hosting services that used phpMyAdmin, so I went with it. From that point forward, I was learning PHP 'on-the-job'. I used the PHP.net docs often, as well as StackOverflow and standard Google searches to help me through each problem I ran into.</p><p>I went through a number of iterations on the design for the website before settling on the current version. Simple to use and straight forward design is what I was going for. I used lined-notebooks and blank sheets of copy paper to draw out ideas. It wasn't until many months later that I discovered Figma, but never used it with this project.</p>",
			"<p>This project became a rewarding learning journey, introducing me to new technologies and data-fetching methods. In the beginning I struggled with PHP, AJAX, and jQuery since I was new to these technologies. Despite the learning curve, I pushed to understand them during development.</p><p>While I acknowledge there's room for code improvement, I take pride in the work accomplished. The development process not only taught me something about PHP but also shed light on the seamless integration of jQuery and AJAX, enabling me to perform data fetching without page reloads—a feature I found particularly cool! I also discovered the flexibility of creating my own Date Objects if the built-in ones didn't suit my preferences.</p>",
		],
	},
	{
		id: "twobarrels",
		tech: "React • React Router • FontAwesome",
		name: "React Two Barrels Website",
		imgSrc: "twobarrels",
		projectLink: "https://rlnb2022.github.io/twobarrels/",
		githubLink: "https://github.com/rlnB2022/twobarrels",
		description: [
			"<p>After discovering Two Barrels, I wanted to show my enthusiasm and interest in their company by recreating their website using what I know - React!</p><p>What impresses me about Two Barrels? Their core values. Period. The freedom given to developers to try new things out even if they fail. The opportunity to work and learn from other developers, daily. How they don't take job titles very seriously, which allows employees to work together regardless of their titles or experience levels.</p>",
			"<ul><li>React</li><li>React Router</li><li>useState and useEffect Hooks</li><li>HTML</li><li>CSS</li><li>Javascript</li></ul>",
			"<p>Even though React is a poor choice for building a website like this, I wanted to use the skills I have to 'see if I could do it' anyway.</p><p>I went through every single page and read every single word of this website to get an understanding of what components would be needed. In all, this project uses 40 components with integrated stylesheets for each.</p><p>I used a mobile-first design, then added styles to accomodate tablet and desktop.</p><p>In my opinion, the end result turned out great!</p>",
			"<p>I learned that Github Pages doesn't work well with React Router. Typing directly into the address bar to get to a specific page produces a 404 error. I have looked into why this occurs and have decided to add this as a backlog item that I'd like to learn about and fix in the future.</p><p>I also learned that <strong>I enjoy being challenged</strong>. This was a really fun project to build and has accelerated my confidence as a Front End Web Developer.</p>",
		],
	},
	{
		id: "amazon",
		tech: "React • Redux • Firebase • React Router",
		name: "Amazon Clone",
		imgSrc: "amazon-clone",
		projectLink: "https://clone-part-ii.web.app",
		githubLink: "https://github.com/rlnB2022/amazon-clone",
		description: [
			"<p>This project gave me an opportunity to enhance my comprehension of React and React Router. It involved the implementation of the Firebase User Authentication system, shopping carts, and one day, when I have time to get back to this, payment systems. Within this project, new users can register for an account, create a User ID and password, as well as sign in and sign out. Clicking the cart icon will re-direct you to your shopping cart which displays all of the products that you’ve selected for purchase.</p>",
			"<ul><li>React</li><li>React Redux</li><li>React Router</li><li>Firebase (user authentication)</li><li>useState / UseEffect Hooks</li><li>HTML</li><li>CSS</li><li>Javascript</li></ul>",
			"<p>Taking inspiration from the actual amazon.com website, I mocked up a one-page paper wireframe. While certain elements such as the search bar, cart quantity selector and other links are non-functional, my primary focus was on developing the login system and refining the shopping cart.</p>",
			"<p>Exploring Firebase Auth and implementing shopping carts with React Redux made this project enjoyable.</p><p>Overall, I am happy with how the website turned out and I look forward to revisiting this project to address the issues mentioned above while also making sure to add mobile functionality.</p>",
		],
	},
	{
		id: "visualizer",
		tech: "Javascript • Canvas • Audio",
		name: "Audio Visualizer",
		imgSrc: "audio-visualizer",
		projectLink: "https://rlnb2022.github.io/audio-visualizer/index.html",
		githubLink: "https://github.com/rlnB2022/audio-visualizer",
		description: [
			"<h3 style='margin-top: .5rem'><strong>NOT OPTIMIZED FOR MOBILE (yet)</strong></h3><p>I created this fun project to learn about the canvas element and the HTML audio element. I've seen visualizers before and wanted to challenge myself to make one myself. To depict audio playing, I chose a spinning record. To show the audio visualizations, I wanted them to go completely around the record showing different colors as the frequencies changed. Adding a nice reactive background color effect completed the look for me. Click the Choose a Song button to find a mp3 to load. Once loaded, click anywhere on the canvas to spin the record and listen to the song.</p>",
			"<ul><li>Javascript</li><li>Canvas</li><li>HTML Audio Element</li><li>HTML</li><li>CSS</li><li>jsMediaTags Library</li></ul>",
			"<p>I had to figure out how to draw each item I wanted onto the canvas, this included arcs, lines and text.</p><p>Some of the lines were not as 'strong' as others and would not display from behind the record. So, I had to create a minimum/maximum line length so that they would display properly.</p><p>I was getting errors when trying to play the song selected before it loaded, until I understood that I needed to resume the context, then toggle the Audio to play.</p>",
			"<p>I think I'd like to learn more about canvas and what else I can do with it. I'd love to create audio visualization options.</p><p>I learned about saving and restoring the canvas so that I can make rotational changes, then put the canvas back to its original orientation so that other drawing methods will render correctly.</p><p>This project brought out my creative side. Adding the BG effect was something I thought would be interesting to see. I had to figure out how to change the background color dynamically, so I chose to add RGB based on the audio frequency.</p>",
		],
	},
];
